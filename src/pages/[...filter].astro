---
import { date, excerpt, title } from "../../packages/utils/extract";
import Global from "../../packages/layouts/Global.astro";
import BaseHead from "../../packages/components/BaseHead.astro";
import {
  ROUTES,
  SITE_DESCRIPTION,
  SITE_TITLE,
  POST_COUNT_PER_PAGE,
} from "../../packages/consts";
import Footer from "../../packages/components/Footer.astro";
import NotFound from "./404.astro";

import {
  getFilteredPage,
  getAllFilterEntries,
  mapServerPostToClient,
  isValidFilter,
} from "../../packages/utils/filter";
import MantineHeader from "../components/MantineHeader";
import MantineMain from "../components/MantineMain";
import BlogList from "../components/BlogList";

export const prerender = true;

export const getStaticPaths = getFilteredPage;
const limitedPosts = Astro.props.posts.slice(0, POST_COUNT_PER_PAGE);
const posts = await mapServerPostToClient(limitedPosts);

const { filter } = Astro.params;
const subTitle = filter.replaceAll("/", " | ");
const isValid = await isValidFilter(filter);
---

{
  isValid ? (
    <Global>
      <BaseHead
        title={`${SITE_TITLE} | ${subTitle}`}
        description={SITE_DESCRIPTION}
        slot="head"
      />
      <MantineHeader
        title={SITE_TITLE}
        links={ROUTES}
        pathname={Astro.url.pathname}
      />
      <MantineMain>
        <BlogList posts={posts} client:only />
        <Footer />
      </MantineMain>
    </Global>
  ) : (
    <NotFound />
  )
}
