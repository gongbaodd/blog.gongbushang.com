---
import { getCollection } from "astro:content";
import { date as dateFrom, excerpt as excertpFrom, title as titleFrom } from "@/packages/utils/extract";
import type { IPost } from "./BlogList";
import BlogSections from "./BlogSections";

// Get all blog posts
const _posts = await getCollection("blog");

// Transform posts to match IPost interface
const allPosts: IPost[] = await Promise.all(
  _posts.map(async (post) => ({
    id: post.id,
    href: `/${post.data.category}/${post.id}`,
    title: await titleFrom(post),
    date: dateFrom(post),
    data: {
      category: post.data.category,
      tag: post.data.tag,
      cover: post.data.cover,
    },
    excerpt: await excertpFrom(post),
  }))
);

const sortedPosts = allPosts.sort((a, b) => b.date.getTime() - a.date.getTime());

const latestPosts = sortedPosts.slice(0, 5);

const historyPosts = sortedPosts.slice(5, 10);
---

<BlogSections 
  latestPosts={latestPosts} 
  historyPosts={historyPosts} 
  client:load
/>