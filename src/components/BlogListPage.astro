---
import Global from "../../packages/layouts/Global.astro";
import BaseHead from "../../packages/components/BaseHead.astro";
import {
  ROUTES,
  SITE_DESCRIPTION,
  SITE_TITLE,
  FILTER_ENTRY
} from "../../packages/consts";
import MantineHeader from "./MantineHeader";
import MantineMain from "./MantineMain";
import BlogList, { BlogGrid, BlogGridSSR, BlogListNanoStore, MenuCategory, MenuSeries, MenuTag, type IPost } from "./BlogList";
import Footer from "@/packages/components/Footer.astro";
import { getCategoriesFrom, getSeriesFrom, getTagsFrom } from "@/packages/utils/badges";
import type { CollectionEntry } from "astro:content";
import { mapServerPostToClient } from "@/packages/utils/filter";


type T_POST = CollectionEntry<"blog">;
interface Props {
    subTitle: string
    posts: T_POST[]
    totalCount: number
    filter: string
    entryType?: FILTER_ENTRY
}

const { subTitle, posts: limitedPosts } = Astro.props
const posts = await mapServerPostToClient(limitedPosts);
const [
  categories,
  series,
  tags
] = await Promise.all([
  getCategoriesFrom(limitedPosts),
  getSeriesFrom(limitedPosts),
  getTagsFrom(limitedPosts)
])

---
<Global>
  <BaseHead
    title={`${SITE_TITLE} | ${subTitle}`}
    description={SITE_DESCRIPTION}
    slot="head"
  >
  <BlogListNanoStore posts={posts} client:load />
  </BaseHead>
  <MantineHeader
    title={SITE_TITLE}
    links={ROUTES}
    pathname={Astro.url.pathname}
  />
  <MantineMain>
    <BlogList posts={posts}>
      <MenuCategory slot="menuCategory" categories={categories} />
      <MenuSeries slot="menuSeries" series={series} />
      <MenuTag slot="menuTag" tags={tags} />
      <BlogGridSSR slot="blogGridxs" size="xs" />
      <BlogGridSSR slot="blogGridsm" size="sm" />
      <BlogGridSSR slot="blogGridmd" size="md" /> 
      <BlogGridSSR slot="blogGridlg" size="lg" />
      <BlogGridSSR slot="blogGridxl" size="xl" /> 
      <BlogGrid slot="blogGrid" client:only />
    </BlogList>
    <Footer />
  </MantineMain>
</Global>
